"""
Django settings for drf_ecommerce project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
# py
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# Application definition

BASE_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_APPS = [
    'django_extensions',
    'rest_framework',
    # authtoken
    'rest_framework.authtoken',
    # simplejwt
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'simple_history',
    'import_export',
    'drf_yasg',
    'corsheaders',
]

OWN_APPS = [
    'apps.core',
    'apps.shared',
    'apps.features.auth_own',
    'apps.features.user',
    'apps.features.product',
    'apps.features.expense',
]

INSTALLED_APPS = BASE_APPS + THIRD_APPS + OWN_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
    'apps.features.auth_own.middlewares.SwaggerAndReDocLoginRequiredMiddleware',
]

ROOT_URLCONF = 'drf_ecommerce.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'drf_ecommerce.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# "Usa este modelo como el modelo de usuario principal en toda la aplicación
# (incluyendo autenticación, relaciones con otros modelos, formularios de usuario, etc.)".
AUTH_USER_MODEL = 'user.Users'

# Cuando se requiera login, Django redirige aquí
LOGIN_URL = '/accounts/login/'  # Redirecciona al login si no está autenticado

# Después del login exitoso, redirige aquí
LOGIN_REDIRECT_URL = '/swagger/' # Redirecciona al swagger si no se define el next en el login.html

# URL para cerrar sesión (opcional)
LOGOUT_REDIRECT_URL = '/accounts/login/'

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
# STATICFILES_DIRS = [BASE_DIR / 'static']

# Media (Imgs, Files, etc)

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# SETTINGS THIRD_APPS

# swagger
SWAGGER_SETTINGS = {
    'USE_SESSION_AUTH': False,  # Desactiva el login de sesión de Django Admin
    'DOC_EXPANSION': 'none', # comprime los endpoints por default
    'SECURITY_DEFINITIONS': {
        # authtoken
        # 'Token': {
        #     'type': 'apiKey',
        #     'in': 'header',
        #     'name': 'Authorization',
        #     'description': "Añade el token con el formato: Token <tu_token>",
        # },
        # simplejwt
        'Bearer': {
            'type': 'apiKey',
            'in': 'header',
            'name': 'Authorization',
            'description': "Usa el formato: Bearer <tu_token_jwt>",
        }
    },
}
# redoc from swagger
REDOC_SETTINGS = {
    'LAZY_RENDERING': False,
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # authtoken
        # 'apps.features.auth_own.authentication.CustomAuthentication', # Authentication with token (header Authorization) custom.
        # simplejwt
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    # simplejwt or authtoken
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    )
}

# simplejwt
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=15),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
}

# authtoken
TOKEN_EXPIRED_AFTER_SECONDS = 900 # 900 -> seconds -> equivalentes a 15 minutes -> expired token.

# default_token_generator
PASSWORD_RESET_TIMEOUT = 900 # 900 -> seconds -> equivalentes a 15 minutes -> expired token.

# config cors
# CORS_ALLOWED_ORIGINS = [
#     "http://127.0.0.1:3000",
#     "http://localhost:3000",
#     "https://127.0.0.1:3000",
#     "https://localhost:3000",
# ]

CORS_ORIGIN_WHITELIST = [
    "http://127.0.0.1:3000",
    "http://localhost:3000",
    "https://127.0.0.1:3000",
    "https://localhost:3000",
]

# SETTINGS OWN_APPS

# logs

# DEBUG: Mensajes detallados, generalmente útiles para la depuración.

# INFO: Mensajes informativos sobre el funcionamiento normal de la aplicación.

# WARNING: Mensajes que indican situaciones inusuales pero no críticas.

# ERROR: Mensajes que indican errores que afectan a la funcionalidad.

# CRITICAL: Errores graves que probablemente causen la falla de la aplicación.

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,

    'formatters': {
        'verbose': {
            'format': '[{levelname}] {asctime} {name} | {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },

    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
            'level': 'DEBUG', # Captura todos los niveles de log, incluyendo DEBUG
        },
        'file_user_viewsets': {
            'level': 'DEBUG', # Captura todos los niveles de log, incluyendo DEBUG
            'class': 'logging.FileHandler',
            # Usamos str() para convertir la ruta de Path a una cadena
            'filename': str(BASE_DIR / 'logs' / 'user' / 'reset_password_request.log'),
            'formatter': 'verbose',
        },
    },

    'loggers': {
        # Logger para la app contact views.
        'apps.features.user.api.viewsets.viewsets_users': {
            'handlers': ['console', 'file_user_viewsets'],
            'level': 'DEBUG', # Captura todos los niveles de log para este logger
            'propagate': False, # evita que el log se propague a loggers de nivel superior (evita mensajes duplicados).
        },
    }
}